{
  "variables": {
    "additional_yum_repos": "",
    "ami_description": "EKS Kubernetes Worker AMI on Clear Linux (k8s: {{user `eks_version`}})",
    "ami_name": "clear-node-{{user `eks_version`}}-{{ timestamp }}",
    "ami_users": "",
    "arch": "x86_64",
    "associate_public_ip_address": "",
    "aws_profile": "{{env `AWS_PROFILE`}}",
    "aws_region": "us-west-2",
    "binary_bucket_name": "amazon-eks",
    "binary_bucket_region": "us-west-2",
    "cleanup_image": "true",
    "cni_plugin_version": "v0.8.6",
    "containerd_version": "1.6.6-1.amzn2",
    "creator": "{{env `USER`}}",
    "data_volume_size": "80",
    "docker_version": "20.10.17-1.amzn2",
    "encrypted": "false",
    "instance_type": "m6i.large",
    "kernel_version": "",
    "kms_key_id": "",
    "kubernetes_build_date": "2022-07-27",
    "kubernetes_version": "1.23.9",
    "launch_block_device_mappings_volume_size": "80",
    "product-code": "4ks0lssia3phyyrbckdk9xgba",
    "pull_cni_from_github": "true",
    "remote_folder": "",
    "root_volume_size": "80",
    "runc_version": "1.1.3-1.amzn2",
    "security_group_id": "",
    "sonobuoy_e2e_registry": "",
    "source_ami_arch": "x86_64",
    "source_ami_name": "clear-3*",
    "source_ami_owner": "679593333241",
    "source_ami_ssh_user": "clear",
    "ssh_interface": "",
    "ssh_username": "clear",
    "subnet_id": "subnet-1881bb33",
    "target_ami_name": "amazon-eks-node-{{user `kubernetes_version`}}-clear-{{ timestamp }}",
    "temporary_security_group_source_cidrs": "",
    "vpc_id": "vpc-96a88eee"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `source_ami_id`}}",
      "ami_users": "{{user `ami_users`}}",
      "snapshot_users": "{{user `ami_users`}}",
      "source_ami_filter": {
        "filters": {
          "name": "clear-3*",
          "product-code": "4ks0lssia3phyyrbckdk9xgba"
        },
        "owners": [
          "679593333241"
        ],
        "most_recent": true
      },
      "instance_type": "{{user `instance_type`}}",
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/sda1",
          "volume_size": "{{user `root_volume_size`}}",
          "volume_type": "gp3",
          "delete_on_termination": true
        },
        {
          "device_name": "/dev/sdb",
          "volume_size": "{{user `data_volume_size`}}",
          "volume_type": "gp3",
          "delete_on_termination": true
        }
      ],
      "ami_block_device_mappings": [
        {
          "device_name": "/dev/sdb",
          "volume_size": "{{user `data_volume_size`}}",
          "volume_type": "gp3",
          "delete_on_termination": true
        }
      ],
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_interface": "{{user `ssh_interface`}}",
      "temporary_security_group_source_cidrs": "{{user `temporary_security_group_source_cidrs`}}",
      "security_group_id": "{{user `security_group_id`}}",
      "associate_public_ip_address": "{{user `associate_public_ip_address`}}",
      "ssh_pty": true,
      "encrypt_boot": "{{user `encrypted`}}",
      "kms_key_id": "{{user `kms_key_id`}}",
      "run_tags": {
        "creator": "{{user `creator`}}"
      },
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Name": "{{user `target_ami_name`}}",
        "created": "{{timestamp}}",
        "docker_version": "{{ user `docker_version`}}",
        "containerd_version": "{{ user `containerd_version`}}",
        "source_ami_id": "{{ user `source_ami_id`}}",
        "kubernetes": "{{ user `kubernetes_version`}}/{{ user `kubernetes_build_date` }}/bin/linux/{{ user `arch` }}",
        "cni_plugin_version": "{{ user `cni_plugin_version`}}"
      },
      "ami_name": "{{user `target_ami_name`}}",
      "ami_description": "{{ user `ami_description` }}, (k8s: {{ user `kubernetes_version` }}, docker: {{ user `docker_version` }}, containerd: {{ user `containerd_version` }})"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "sudo mkdir -p /etc/sudoers.d",
        "sudo touch /etc/sudoers.d/sudoers",
        "RND=$(openssl rand -base64 32); PWD=$(openssl passwd -1 -salt 5RPVAd ${RND}); for i in clear root; do sudo usermod -p ${PWD} ${i}; done",
        "sudo sed -i '0,/%wheel[[:space:]]*ALL=(ALL)[[:space:]]*ALL/{s||%wheel        ALL=(ALL)       NOPASSWD: ALL|}' /etc/sudoers.d/sudoers"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo mkdir -p ~/usr/bin",
        "sudo mkdir -p ~/usr/lib64",
        "sudo touch /etc/environment",
        "sudo touch /etc/profile",
        "echo 'PATH=$PATH:~/usr/bin' | sudo tee --append /etc/environment",
        "echo 'PATH=$PATH:~/usr/bin' | sudo tee --append /etc/profile",
        "echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/usr/lib64' | sudo tee --append /etc/environment",
        "echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/usr/lib64' | sudo tee --append /etc/profile"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "mkdir -p /tmp/worker/",
        "mkdir -p /tmp/worker/log-collector-script/",
        "mkdir -p /tmp/services/",
        "mkdir -p /tmp/mods-bin/",
        "mkdir -p /tmp/mods-conf/"
      ]
    },
    {
      "type": "file",
      "source": "{{template_dir}}/files/",
      "destination": "/tmp/worker/"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/log-collector-script/linux/",
      "destination": "/tmp/worker/log-collector-script/"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/mods/bin/",
      "destination": "/tmp/mods-bin/"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/mods/services/",
      "destination": "/tmp/services/"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/mods/conf/",
      "destination": "/tmp/mods-conf/"
    },
    {
      "type": "shell",
      "inline": [
        "sudo mkdir -p /etc/sudoers.d",
        "sudo touch /etc/sudoers.d/sudoers",
        "RND=$(openssl rand -base64 32); PWD=$(openssl passwd -1 -salt 5RPVAd ${RND}); for i in clear root; do sudo usermod -p ${PWD} ${i}; done",
        "sudo sed -i '0,/%wheel[[:space:]]*ALL=(ALL)[[:space:]]*ALL/{s||%wheel        ALL=(ALL)       NOPASSWD: ALL|}' /etc/sudoers.d/sudoers"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/mods/scripts/install-clear-worker.sh",
      "execute_command": "echo 'packer' | {{.Vars}} sudo -S -E bash -eux '{{.Path}}'",
      "expect_disconnect": true,
      "pause_after": "30s",
      "environment_vars": [
        "KUBERNETES_VERSION={{user `kubernetes_version`}}",
        "KUBERNETES_BUILD_DATE={{user `kubernetes_build_date`}}",
        "BINARY_BUCKET_NAME={{user `binary_bucket_name`}}",
        "BINARY_BUCKET_REGION={{user `binary_bucket_region`}}",
        "DOCKER_VERSION={{user `docker_version`}}",
        "CONTAINERD_VERSION={{user `containerd_version`}}",
        "RUNC_VERSION={{user `runc_version`}}",
        "CNI_PLUGIN_VERSION={{user `cni_plugin_version`}}",
        "PULL_CNI_FROM_GITHUB={{user `pull_cni_from_github`}}",
        "AWS_ACCESS_KEY_ID={{user `aws_access_key_id`}}",
        "AWS_SECRET_ACCESS_KEY={{user `aws_secret_access_key`}}",
        "AWS_SESSION_TOKEN={{user `aws_session_token`}}",
        "CLEANUP_IMAGE={{user `cleanup_image`}}",
        "SONOBUOY_E2E_REGISTRY={{user `sonobuoy_e2e_registry`}}"
      ]
    },
    {
      "type": "shell",
      "script": "{{template_dir}}/mods/scripts/setup-mods.sh",
      "execute_command": "echo 'packer' | {{.Vars}} sudo -S -E bash -eux '{{.Path}}'"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    },
    {
      "type": "manifest",
      "output": "{{user `ami_name`}}-manifest.json",
      "strip_path": true
    }
  ]
}
